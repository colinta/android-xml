require 'android-xml'
require 'fileutils'


describe 'Writing to a file' do

  before do
    AndroidXml.reset
    $stderr.reopen('/dev/null', 'w')
  end

  after do
    warn "\033[31m‚ê°\033[0m tmp/"
    FileUtils.remove_dir('tmp/')
    $stderr = STDERR
  end

  it 'should write an xml file' do
    filename = 'tmp/file1.xml'
    xml = AndroidXml.file(filename) do
      any_tag
    end
    xml.write

    expect(File.exists?(filename)).to be true

    expect(File.new(filename).read).to eql <<-XML
<!-- Do not edit this file. It was generated by AndroidXml. -->
<any-tag />
XML
  end

  it 'should create a folder if necessary' do
    filename = 'tmp/a/b/c/file2.xml'
    xml = AndroidXml.file(filename) do
      another_tag
    end
    xml.write

    expect(File.exists?(filename)).to be true

    expect(File.new(filename).read).to eql <<-XML
<!-- Do not edit this file. It was generated by AndroidXml. -->
<another-tag />
XML
  end

  it 'should remove stale files' do
    stale_file = 'tmp/files/stale.xml'
    FileUtils.mkdir_p(File.dirname(stale_file))
    File.open(stale_file, 'w') do |f|
      f.write("<!-- Do not edit this file. It was generated by AndroidXml. -->\n")
    end

    not_my_file = 'tmp/files/keep.xml'
    FileUtils.mkdir_p(File.dirname(not_my_file))
    File.open(not_my_file, 'w') do |f|
      f.write("This file is fine!")
    end

    filename = 'tmp/file3.xml'
    xml = AndroidXml.file(filename) do
      another_tag
    end
    AndroidXml.write_all
    AndroidXml.clean_up 'tmp/'

    expect(File.exists?(filename)).to be true
    expect(File.exists?(stale_file)).to be false
    expect(File.exists?(not_my_file)).to be true
  end

end
